version: "3.9"
services:

  db:
    image: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10    
    container_name: postgres
    restart: always
    environment:
      - "POSTGRES_USER=root"
      - "POSTGRES_PASSWORD=password"
      - "APP_DB_USER=coins"
      - "APP_DB_PASS=dbpass"
      - "APP_DB_NAME=coins"
      #POSTGRES_USER: coins
      #POSTGRES_PASSWORD: pgPASS
      #POSTGRES_DB: 'coins'
    volumes:
      - ./env/postgres_init:/docker-entrypoint-initdb.d/
      # - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "$INT:5432:5432"

  redis:
    image: "redis:latest"
    container_name: redis
    restart: always
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
    ports:
      - "$INT:6379:6379"
    volumes:
      - "./redis-persistence:/data"

  rabbitmq:
    image: "rabbitmq:3.8.14-management"
    container_name: rabbitmq
    hostname: 'dev-rabbitmq'
    environment:
      - "RABBITMQ_PASSWORD=thisISrabbitPASS123"
      - "RABBITMQ_USERNAME=admin"
      - ./env/rabbitmq/config/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
    volumes:
      - './rabbitmq/data/:/var/lib/rabbitmq/mnesia/'
    ports:
      # HTTP management UI
      - "$INT:15672:15672"
      # AMQP protocol port
      - "$INT:5672:5672"

  coins:
    image: devico-coins:latest
    container_name: coins
    # command: uvicorn main:app --port 80 --host 0.0.0.0 --workers 1
    env_file:
      - ./env/coins.env
    restart: always
    ports:
      - "$INT:80:80"      

  coins-celery:
    image: devico-coins:latest
    container_name: coins-celery
    command: "celery -A coins worker -B -l INFO"
    env_file:
      - ./env/coins.env    